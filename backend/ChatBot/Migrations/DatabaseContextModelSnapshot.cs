// <auto-generated />
using System;
using ChatBot.Repositories.EFC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatBot.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChatBot.Models.Conversation", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("ChatBot.Models.Message", b =>
                {
                    b.Property<Guid?>("ID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorEFID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ConversationID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("AuthorEFID");

                    b.HasIndex("ConversationID");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ChatBot.Models.Participant", b =>
                {
                    b.Property<Guid>("EFID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ConversationID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ID")
                        .HasColumnType("char(36)");

                    b.HasKey("EFID");

                    b.HasIndex("ConversationID");

                    b.ToTable("Participant");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Participant");
                });

            modelBuilder.Entity("ChatBot.Models.User", b =>
                {
                    b.HasBaseType("ChatBot.Models.Participant");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("ChatBot.Models.Message", b =>
                {
                    b.HasOne("ChatBot.Models.Participant", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorEFID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatBot.Models.Conversation", null)
                        .WithMany("Messages")
                        .HasForeignKey("ConversationID");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ChatBot.Models.Participant", b =>
                {
                    b.HasOne("ChatBot.Models.Conversation", null)
                        .WithMany("Participants")
                        .HasForeignKey("ConversationID");
                });

            modelBuilder.Entity("ChatBot.Models.Conversation", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
